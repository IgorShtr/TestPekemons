{"version":3,"sources":["components/commonPage.js","components/singlePokemonInfo.js","pages/homePage.js","App.js","serviceWorker.js","index.js"],"names":["AllPokemons","props","pokemonList","setSiglePokemonId","useState","pokemonsInfoList","setPokemonsInfoList","useLayoutEffect","pokemonsListData","typesAll","forEach","index","url","axios","get","then","result","url1","data","id","console","log","name","types","type","map","singlePokData","push","length","item","catch","bgColor","pokemonsCard","pokAbil","key","uuidv4","style","backgroundColor","PokemonCard","onClick","Image","src","alt","Abilblock","MainSection","styled","div","SinglePokemonInfo","siglePokemonId","pokemonInfo","setPokemonInfo","isDataResived","setIsDataResived","useEffect","pokemonData","stats","speedVal","base_stat","SPdefensedVal","SPattackVal","defenseVal","attackVal","HPVal","typeName","stat","attack","defense","HP","SPattack","SPdefense","Speed","pokemonDataJSX","Object","entries","value","ExectData","height","weight","base_experience","PokemonDitails","display","HomePage","setPokemonList","shownItems","setIShowntems","results","Container","className","Header","PokemonsData","LoadMore","header","button","App","basename","exect","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"ilCAKO,IAAMA,EAAc,SAAAC,GAAU,IAC3BC,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,kBADa,EAGcC,mBAAS,IAHvB,mBAG3BC,EAH2B,KAGTC,EAHS,KAKlCC,2BAAgB,WACd,IAAIC,EAAmB,GACnBC,EAAW,GACfP,EAAYQ,SAAQ,WAAUC,GAAW,IAAlBC,EAAiB,EAAjBA,IACrBC,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAClB,IAAMC,EAAI,4CAAwCD,EAAOE,KAAKC,GAApD,KACVN,IAAMC,IAAIG,GACVF,MAAK,SAAAC,GACHI,QAAQC,IAAIL,GADC,MAEeA,EAAOE,KAA3BI,EAFK,EAELA,KAAMC,EAFD,EAECA,MAAOJ,EAFR,EAEQA,GACfK,EAAOD,EAAME,KAAI,qBAAGD,KAAgBF,QACpCI,EAAgB,CACpBP,KACAG,OACAE,QAEFhB,EAAiBmB,KAAKD,GACrBf,IAAUT,EAAY0B,OAAS,GAAMtB,EAAoBE,GAC1DgB,EAAKI,OAAO,EAAKJ,EAAKd,SAAQ,SAACmB,GAAD,OAAQpB,EAASkB,KAAKE,MAAOpB,EAASkB,KAAKH,EAAK,OAI/EM,OAAM,kBAAIV,QAAQC,IAAI,oBAG1B,CAACnB,IAEJ,IAAM6B,EAAU,SAACP,GACf,OAAQA,GACT,IAAK,SACH,MAAO,UACR,IAAK,SACH,MAAO,WACT,IAAK,MACH,MAAO,UACT,IAAK,OACH,MAAO,WACT,IAAK,QACH,MAAO,UACT,IAAK,QACH,MAAO,WACT,IAAK,QACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,QACH,MAAO,YACT,IAAK,MACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,QACI,MAAO,UAGPQ,EAAe3B,GAAoBA,EAAiBoB,KAAI,YAAyB,IAAtBH,EAAqB,EAArBA,KAAMH,EAAe,EAAfA,GAC/Dc,EAD8E,EAAXT,KACpDC,KAAI,SAAAI,GAAI,OAC3B,yBAAKK,IAAKC,cAAUC,MAAO,CAACC,gBAAgBN,EAAQF,KAClD,2BACGA,OAKP,OACE,kBAACS,EAAD,CAAaJ,IAAKC,cAAUI,QAAS,kBAAMpC,EAAkBgB,KAC3D,kBAACqB,EAAD,KACE,yBAAKC,IAAG,sCAAiCtB,EAAjC,QAA2CuB,IAAI,eAEzD,2BACGpB,GAEH,kBAACqB,EAAD,KACGV,OAKT,OAAO,kBAACW,EAAD,KACEZ,IAILY,EAAcC,IAAOC,IAAV,KAMXR,EAAcO,IAAOC,IAAV,KAaXN,EAAQK,IAAOC,IAAV,KAMLH,EAAYE,IAAOC,IAAV,K,osBCrHR,IAAMC,EAAoB,SAAC9C,GAAW,IACnC+C,EAAmB/C,EAAnB+C,eADkC,EAIJ5C,mBAAS,IAJL,mBAInC6C,EAJmC,KAItBC,EAJsB,OAKA9C,oBAAS,GALT,mBAKnC+C,EALmC,KAKpBC,EALoB,KAO1CC,qBAAU,WAER,IAAMpC,EAAI,4CAAwC+B,EAAxC,KACVnC,IAAMC,IAAIG,GAAMF,MAAK,SAAAC,GACnBkC,EAAelC,EAAOE,MACtBkC,GAAiB,QAGlB,CAACJ,IACJ,IAAMM,EAAc,GACpB,GAAIH,EAAe,CACCF,EAAVM,MADU,IAAD,cAOWN,EALpBM,MAFS,GAEYC,EAFZ,KAECC,UACHC,EAHE,KAGbD,UACWE,EAJE,KAIbF,UACWG,EALE,KAKbH,UACWI,EANE,KAMbJ,UACWK,EAPE,KAObL,UAPa,cAaaR,EALtBM,MARS,GAcUQ,GAdV,KAQCC,KAAQ1C,KART,KASb0C,KAAQ1C,KATK,KAUb0C,KAAQ1C,KAVK,KAWb0C,KAAQ1C,KAXK,KAYb0C,KAAQ1C,KAZK,KAab0C,KAAQ1C,KAbK,YAc0B2B,EAApC1B,MAdU,MAcFC,KAAMF,MACrBgC,EAAY9B,KAAOuC,EACnBT,EAAYW,OAASJ,EACrBP,EAAYY,QAAUN,EACtBN,EAAYa,GAAKL,EACjBR,EAAYc,SAAWT,EACvBL,EAAYe,UAAYX,EACxBJ,EAAYgB,MAAQd,EAItB,IAGMe,EAHoBC,OAAOC,QAAQnB,GAGA7B,KAAI,YAAoB,IAAD,mBAAjBH,EAAiB,KAAXoD,EAAW,KAC9D,OAAQ,kBAACC,EAAD,CAAWzC,IAAKC,eACd,2BAAIb,GACJ,2BAAIoD,OAhD0B,EAuDmBzB,GAAeA,EAApE3B,EAvDkC,EAuDlCA,KAAMH,EAvD4B,EAuD5BA,GAAIyD,EAvDwB,EAuDxBA,OAAQC,EAvDgB,EAuDhBA,OAAeC,GAvDC,EAuDRvD,MAvDQ,EAuDDuD,iBAEzC,OAAO,kBAACC,EAAD,CAAgB3C,MAAO,CAAE4C,QAAShC,EAAiB,QAAU,SAClE,yBAAKP,IAAG,sCAAiCO,EAAjC,QAAuDN,IAAI,cACnE,2BAAIpB,EAAJ,IAAWH,GACVoD,EACD,kBAACI,EAAD,KACE,yCACA,2BAAIG,IAEN,kBAACH,EAAD,KACE,qCACA,2BAAIC,IAEN,kBAACD,EAAD,KACE,qCACA,2BAAIE,MAMJE,EAAiBlC,IAAOC,IAAV,KAoBd6B,EAAY9B,IAAOC,IAAV,K,mnBClGR,IAAOmC,EAAW,WAAM,IAAD,EACU7E,mBAAS,IADnB,mBACrBF,EADqB,KACRgF,EADQ,OAEQ9E,mBAAS,GAFjB,mBAErB+E,EAFqB,KAETC,EAFS,OAGgBhF,qBAHhB,mBAGrB4C,EAHqB,KAGL7C,EAHK,KAa5B,OARDkD,qBAAU,WAEL,IAAMzC,EAAG,mDAA+CuE,EAA/C,mBAAoEA,GAC7EtE,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAClBkE,EAAelE,EAAOE,KAAKmE,cAE9B,CAACF,IAGF,kBAACG,EAAD,CAAWC,UAAU,OACnB,kBAACC,EAAD,CAAQD,UAAU,cAChB,uCAEF,kBAACE,EAAD,KACE,kBAAC,EAAD,CAAavF,YAAcA,EAAaC,kBAAmBA,IAC3D,kBAAC,EAAD,CAAmB6C,eAAgBA,KAErC,kBAAC0C,EAAD,CAAUnD,QAAS,kBAAI6C,EAAcD,EAAW,KAAhD,eAMAG,EAAYzC,IAAOC,IAAV,KAIT0C,EAAS3C,IAAO8C,OAAV,KAWNF,EAAe5C,IAAOC,IAAV,KAMZ4C,EAAW7C,IAAO+C,OAAV,KCvCCC,MAVf,WAGE,OACG,kBAAC,IAAD,CAAYC,SAAS,YACpB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,gBAAgBC,UAAYhB,MCCjCiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEdlF,OAAM,SAAAmF,GACL7F,QAAQ6F,MAAMA,EAAMC,c","file":"static/js/main.4efb2804.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styled from \"styled-components\";\r\n\r\nexport const AllPokemons = props => {\r\n  const { pokemonList, setSiglePokemonId } = props;  \r\n \r\n  const [pokemonsInfoList, setPokemonsInfoList] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    let pokemonsListData = [];\r\n    let typesAll = []\r\n    pokemonList.forEach(({ url }, index) => {\r\n      axios.get(url).then(result => {        \r\n        const url1 = `https://pokeapi.co/api/v2/pokemon/${result.data.id}/`\r\n        axios.get(url1).\r\n        then(result => {\r\n          console.log(result)\r\n          const { name, types, id } = result.data;\r\n          const type = types.map(({ type }) => type.name)\r\n          const singlePokData = {\r\n            id,\r\n            name,\r\n            type\r\n          }\r\n          pokemonsListData.push(singlePokData);             \r\n          (index === pokemonList.length - 1) && setPokemonsInfoList(pokemonsListData);\r\n         (type.length>1) ? type.forEach((item)=>typesAll.push(item)):typesAll.push(type[0])\r\n          const unification = ()=> Array.from(new Set(typesAll));\r\n          // const unikTypesAll = unification();         \r\n        })\r\n        .catch(()=>console.log(\"error\"));\r\n      });\r\n    });\r\n  }, [pokemonList]);\r\n\r\n  const bgColor = (type) =>{\r\n    switch (type) {\r\n   case \"poison\" :\r\n     return \"#b383e0\"\r\n    case \"flying\" :\r\n      return \" #5454d1\"\r\n    case \"bug\":\r\n      return \"#968f54\"\r\n    case \"fire\":\r\n      return \" #f07f6b\"\r\n    case \"water\":\r\n      return \"#749adf\"\r\n    case \"grass\":\r\n      return \" #85ee81\"\r\n    case \"fairy\":\r\n      return \"#e286da\"\r\n    case \"electric\":\r\n      return \"#e7e1a8\"\r\n    case \"ground\":\r\n      return \"#615f4b\"\r\n    case \"steel\":\r\n      return \"lightgrey\"\r\n    case \"ice\":\r\n      return \"#c3d2ee\"\r\n    case \"fighting\":\r\n      return \"#a5352d\"\r\n    case \"psychic\":\r\n      return \"#8aac3c\"\r\n    case \"rock\":\r\n      return \"#494e3e\"\r\n    default:  \r\n        return \"white\"\r\n }         \r\n }\r\n  const pokemonsCard = pokemonsInfoList && pokemonsInfoList.map(({ name, id, type }) => {\r\n    const pokAbil = type.map(item => (\r\n      <div key={uuidv4()} style={{backgroundColor:bgColor(item)}}>\r\n        <p >\r\n          {item}\r\n        </p>\r\n      </div>\r\n    ))\r\n\r\n    return (\r\n      <PokemonCard key={uuidv4()} onClick={() => setSiglePokemonId(id)}>\r\n        <Image>\r\n          <img src={`http://pokeapi.co/media/img/${id}.png`} alt=\"not found\"></img> \r\n        </Image>          \r\n        <p>\r\n          {name}\r\n        </p>\r\n        <Abilblock>\r\n          {pokAbil}\r\n        </Abilblock>\r\n      </PokemonCard>\r\n    )\r\n  });  \r\n  return <MainSection>\r\n          {pokemonsCard}\r\n        </MainSection>\r\n}\r\n\r\nconst MainSection = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nwidth: 70%;\r\n`;\r\n\r\nconst PokemonCard = styled.div`\r\nmargin: 10px;\r\nwidth: 100px;\r\nheight: 150px;\r\nborder: 1px solid grey;\r\n\r\n& p{ \r\n  text-transform: capitalize;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  margin: 0 5px;\r\n}\r\n`\r\nconst Image = styled.div`\r\nmargin: 5px 5px;\r\n height: 40%;\r\n wigth: 80%;\r\n border:1px solid grey;\r\n`\r\nconst Abilblock = styled.div`\r\ndisplay: flex;\r\nflex-wrap:wrap;\r\n& div {\r\n  width:45px;\r\n  margin-top: 5px;\r\n  margin-left: 5px;\r\n  border:1px solid grey;\r\n  padding: 2px;    \r\n  & p{\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    text-transform: capitalize;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n`\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const SinglePokemonInfo = (props) => {\r\n  const { siglePokemonId } = props;\r\n\r\n\r\n  const [pokemonInfo, setPokemonInfo] = useState({});\r\n  const [isDataResived, setIsDataResived] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    const url1 = `https://pokeapi.co/api/v2/pokemon/${siglePokemonId}/`\r\n    axios.get(url1).then(result => {\r\n      setPokemonInfo(result.data);\r\n      setIsDataResived(true)\r\n    });\r\n\r\n  }, [siglePokemonId]);\r\n  const pokemonData = {}\r\n  if (isDataResived) {\r\n    const { stats } = pokemonInfo;\r\n    const { stats: [{ base_stat: speedVal },\r\n      { base_stat: SPdefensedVal },\r\n      { base_stat: SPattackVal },\r\n      { base_stat: defenseVal },\r\n      { base_stat: attackVal },\r\n      { base_stat: HPVal }] } = pokemonInfo;\r\n    const { stats: [{ stat: { name: Speed } },\r\n      { stat: { name: SPdefense } },\r\n      { stat: { name: SPattack } },\r\n      { stat: { name: defense } },\r\n      { stat: { name: attack } },\r\n      { stat: { name: HP } }] } = pokemonInfo;\r\n    const {types:[{type:{name: typeName}} ]} = pokemonInfo; \r\n    pokemonData.type = typeName \r\n    pokemonData.attack = attackVal;\r\n    pokemonData.defense = defenseVal;\r\n    pokemonData.HP = HPVal;\r\n    pokemonData.SPattack = SPattackVal;\r\n    pokemonData.SPdefense = SPdefensedVal;\r\n    pokemonData.Speed = speedVal;\r\n   }\r\n\r\n\r\n  const pokemonDataForJSX = Object.entries(pokemonData);\r\n \r\n\r\n  const pokemonDataJSX = pokemonDataForJSX.map(([name, value]) => {\r\n    return (<ExectData key={uuidv4()}>\r\n              <p>{name}</p>\r\n              <p>{value}</p>\r\n            </ExectData>)\r\n\r\n  })\r\n\r\n  \r\n\r\n  const { name, id, height, weight, types, base_experience } = pokemonInfo && pokemonInfo\r\n\r\n  return <PokemonDitails style={{ display: siglePokemonId ? \"block\" : \"none\" }}>\r\n    <img src={`http://pokeapi.co/media/img/${siglePokemonId}.png`} alt=\"not found\"></img>\r\n    <p>{name}#{id}</p>{}\r\n    {pokemonDataJSX}\r\n    <ExectData>\r\n      <p>Experience</p>\r\n      <p>{base_experience}</p>\r\n    </ExectData>\r\n    <ExectData>\r\n      <p>Height</p>\r\n      <p>{height}</p>\r\n    </ExectData>\r\n    <ExectData>\r\n      <p>Weight</p>\r\n      <p>{weight}</p>\r\n    </ExectData>\r\n  </PokemonDitails>\r\n}\r\n\r\n\r\nconst PokemonDitails = styled.div`\r\npadding-top: 10px;\r\npadding-bottom: 10px;\r\nwidth: 200px;\r\nheight: fit-content;\r\nborder: 1px solid grey;\r\n& img {\r\n  \r\n  margin: 0 10px;\r\n  width: 180px;\r\n  height: 75px;\r\n  border: 1px solid grey;\r\n}\r\n& > p {\r\n  font-weight: 700;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n  margin: 0;\r\n}\r\n`\r\nconst ExectData = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n & p{\r\n  text-transform: capitalize;\r\n  margin: 0;\r\n  border: 1px solid grey;\r\n  padding: 3px 5px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n }\r\n & p:first-child{\r\n width: 50%;\r\n }\r\n & p:last-child{\r\n  width: 20%;\r\n  }\r\n`","import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {AllPokemons} from '../components/commonPage';\r\nimport {SinglePokemonInfo} from '../components/singlePokemonInfo'\r\nimport styled from 'styled-components';\r\n\r\nexport const  HomePage = ()=> {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [shownItems, setIShowntems] = useState(9);\r\n  const [siglePokemonId, setSiglePokemonId] = useState();\r\n\r\n useEffect(() => {\r\n  \r\n      const url = `https://pokeapi.co/api/v2/pokemon/?limit=${shownItems}&offset=${shownItems}`;      \r\n      axios.get(url).then(result => {\r\n        setPokemonList(result.data.results);\r\n      });  \r\n  }, [shownItems]);\r\n \r\n  return (\r\n    <Container className=\"App\">\r\n      <Header className=\"App-header\">\r\n        <p>POKEDEX</p> \r\n      </Header>\r\n      <PokemonsData>\r\n        <AllPokemons pokemonList ={pokemonList} setSiglePokemonId={setSiglePokemonId}></AllPokemons>\r\n        <SinglePokemonInfo siglePokemonId={siglePokemonId}/>\r\n      </PokemonsData>      \r\n      <LoadMore onClick={()=>setIShowntems(shownItems+9)}>Load more</LoadMore>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`\r\nconst Header = styled.header`\r\n// margin: 0 auto;\r\ndisplay: flex;\r\njustify-content: center;\r\n& p {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  padding: 10px 30px;\r\n  font-size: 24px;\r\n}\r\n`\r\nconst PokemonsData = styled.div`\r\ndisplay: flex;\r\n// justify-content: space-around;\r\n// justify-content: start;\r\nalign-items: center;\r\n`\r\nconst LoadMore = styled.button`\r\nwidth: 25%;\r\nmargin: 0 auto;\r\n`","import React, { useState, useEffect} from 'react';\nimport {BrowserRouter as HashRouter,Router, Route} from 'react-router-dom';\nimport {HomePage} from './pages/homePage';\n\n\n\nfunction App() {\n  \n \n  return (   \n     <HashRouter basename=\"/pokemon\">\n      <Route exect path ='/TestPekemons' component ={HomePage}/>\n    </HashRouter>      \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}